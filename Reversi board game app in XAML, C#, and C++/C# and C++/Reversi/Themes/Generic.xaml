<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:view="using:Reversi.Views"
  xmlns:vm="using:Reversi.ViewModels"
  xmlns:common="using:Reversi.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
  d:DataContext="{d:DesignInstance Type=vm:GameViewModel}">

  <Style TargetType="view:BoardSpace">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="view:BoardSpace">
          <Viewbox>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PieceStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="PlayerOne" To="PlayerTwo" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.4" To="180" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="pieceEllipse"/>
                      <ColorAnimation BeginTime="0:0:0.2" Duration="0" To="#0A58C1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pieceEllipse"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="PlayerTwo" To="PlayerOne" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.4" To="180" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="pieceEllipse"/>
                      <ColorAnimation BeginTime="0:0:0.2" Duration="0" To="#AF1A3F" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pieceEllipse"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="PlayerOneHint" To="PlayerOne" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition From="PlayerOne" To="PlayerOneHint" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition From="PlayerTwoHint" To="PlayerTwo" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition From="PlayerTwo" To="PlayerTwoHint" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition To="None" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition From="None" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition From="PlayerOneHint" To="PlayerTwoHint" GeneratedDuration="0:0:0.4"/>
                  <VisualTransition From="PlayerTwoHint" To="PlayerOneHint" GeneratedDuration="0:0:0.4"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="None"/>
                <VisualState x:Name="PlayerOne">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="#AF1A3F" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayerTwo">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="#0A58C1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayerOneHint">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="#AF1A3F" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayerTwoHint">
                  <Storyboard>
                    <ColorAnimation Duration="0" To="#0A58C1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="pieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="LastMoveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="NewPiece" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>                  
                  </VisualTransition>
                  <VisualTransition From="NewPiece" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>                  
                  </VisualTransition>
                  <VisualTransition To="NewCapture" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                  <VisualTransition From="NewCapture" GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <CircleEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NoNewIndicator"/>
                <VisualState x:Name="NewCapture">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="newCaptureEllipse"/>
                    <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="newCaptureEllipse"/>
                    <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="newCaptureEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="NewPiece">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="newPieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="newPieceEllipse"/>
                    <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="newPieceEllipse"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="Pressed" GeneratedDuration="0:0:0.3"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundSquare"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundSquare"/>
                    <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pieceEllipse"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled"/>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="PointerFocused"/>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Height="80" Width="80">
              <Border x:Name="backgroundSquare" Background="Black" Margin="4" Opacity="0.5"/>
              <Ellipse x:Name="pieceEllipse" RenderTransformOrigin="0.5,0.5" Margin="16,16,15,15" Opacity="0" Fill="Transparent">
                <Ellipse.Projection>
                  <PlaneProjection/>
                </Ellipse.Projection>
                <Ellipse.RenderTransform>
                  <CompositeTransform ScaleX="0" ScaleY="0"/>
                </Ellipse.RenderTransform>
              </Ellipse>
              <Ellipse x:Name="newPieceEllipse" RenderTransformOrigin="0.5,0.5" Margin="16,16,15,15" Opacity="0" Fill="Yellow">
                <Ellipse.RenderTransform>
                  <CompositeTransform ScaleX="0" ScaleY="0"/>
                </Ellipse.RenderTransform>
              </Ellipse>
              <Ellipse x:Name="newCaptureEllipse" RenderTransformOrigin="0.5,0.5" Margin="16,16,15,15" Opacity="0" StrokeThickness="10" Stroke="Yellow">
                <Ellipse.RenderTransform>
                  <CompositeTransform ScaleX="0" ScaleY="0"/>
                </Ellipse.RenderTransform>
              </Ellipse>
              <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" StrokeThickness="2" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"/>
            </Grid>
          </Viewbox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="view:PlayerStatus">
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="view:PlayerStatus">
          <Viewbox>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="TurnStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.4">
                    <VisualTransition.GeneratedEasingFunction>
                      <BackEase EasingMode="EaseInOut"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="TiedGameOver"/>
                <VisualState x:Name="PlayerOneTurn">
                  <Storyboard>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerTwoClock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerTwoScoreTextBlock"/>
                    <DoubleAnimation To="0.4" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerTwoGlyphGrid"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="PlayerTwoClock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="PlayerTwoClock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="PlayerTwoScoreTextBlock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="PlayerTwoScoreTextBlock"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayerTwoTurn">
                  <Storyboard>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerOneClock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerOneScoreTextBlock"/>
                    <DoubleAnimation To="0.4" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerOneGlyphGrid"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="PlayerOneClock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="PlayerOneClock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="PlayerOneScoreTextBlock"/>
                    <DoubleAnimation To="0.7" Duration="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="PlayerOneScoreTextBlock"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="WinnerStates">
                <VisualState x:Name="GameNotOver"/>
                <VisualState x:Name="Tied">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerOneWinnerIcon"/>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerTwoWinnerIcon"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayerOneWinner">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerOneWinnerIcon"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PlayerTwoWinner">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayerTwoWinnerIcon"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ClockStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.6">
                    <VisualTransition.GeneratedEasingFunction>
                      <BounceEase Bounces="2" Bounciness="5"/>
                    </VisualTransition.GeneratedEasingFunction>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="ClockShowing"/>
                <VisualState x:Name="ClockHidden">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="-120" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="Clock"/>
                    <DoubleAnimation Duration="0" To="120" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PlayerOneScore"/>
                    <DoubleAnimation Duration="0" To="120" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PlayerTwoScore"/>
                    <DoubleAnimation Duration="0" To="-40" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PlayerOneIconGrid"/>
                    <DoubleAnimation Duration="0" To="-40" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="PlayerTwoIconGrid"/>
                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Clock"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Height="160" Width="240">
              <Grid.Resources>
                <Style x:Name="BorderStyle" TargetType="Border">
                  <Setter Property="Opacity" Value="0.5"/>
                  <Setter Property="Background" Value="Black"/>
                  <Setter Property="Margin" Value="4"/>      
                </Style>
                <Style x:Key="ScoreStyle" TargetType="TextBlock" 
                  BasedOn="{StaticResource HeaderTextBlockStyle}">
                  <Setter Property="HorizontalAlignment" Value="Center"/>
                  <Setter Property="VerticalAlignment" Value="Center"/>
                  <Setter Property="FontWeight" Value="SemiLight"/>
                </Style>
                <Style x:Key="ClockStyle" TargetType="TextBlock" 
                  BasedOn="{StaticResource SubheaderTextBlockStyle}">
                  <Setter Property="FontSize" Value="16"/>
                  <Setter Property="FontFamily" Value="Lucida Sans"/>
                  <Setter Property="HorizontalAlignment" Value="Center"/>
                  <Setter Property="VerticalAlignment" Value="Center"/>
                  <Setter Property="FontWeight" Value="ExtraLight"/>
                  <Setter Property="RenderTransform">
                    <Setter.Value>
                      <TranslateTransform X="0" Y="-8"/>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Grid x:Name="Clock" Grid.RowSpan="2" Grid.Column="2">
                <Grid.RenderTransform>
                  <TranslateTransform/>
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Border Style="{StaticResource BorderStyle}"/>
                <Grid x:Name="PlayerOneClock" RenderTransformOrigin="0.5,0.5">
                  <Grid.RenderTransform>
                    <ScaleTransform/>
                  </Grid.RenderTransform>
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{Binding Clock.PlayerOneMoveTime}" Grid.RowSpan="3" Style="{StaticResource ClockStyle}"/>
                  <TextBlock Text="{Binding Clock.PlayerOneTotalTime}" Grid.Row="2" Grid.RowSpan="3" Style="{StaticResource ClockStyle}"/>
                </Grid>
                <Border Grid.Row="1" Style="{StaticResource BorderStyle}"/>
                <Grid Grid.Row="1" x:Name="PlayerTwoClock" RenderTransformOrigin="0.5,0.5">
                  <Grid.RenderTransform>
                    <ScaleTransform/>
                  </Grid.RenderTransform>
                  <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{Binding Clock.PlayerTwoMoveTime}" Grid.RowSpan="3" Style="{StaticResource ClockStyle}"/>
                  <TextBlock Text="{Binding Clock.PlayerTwoTotalTime}" Grid.Row="2" Grid.RowSpan="3" Style="{StaticResource ClockStyle}"/>
                </Grid>
              </Grid>
              <Grid x:Name="PlayerOneScore" Grid.Column="0">
                <Grid.RenderTransform>
                  <TranslateTransform/>
                </Grid.RenderTransform>
                <Border Style="{StaticResource BorderStyle}"/>
                <TextBlock x:Name="PlayerOneScoreTextBlock" 
                  Text="{Binding Score.PlayerOne}" FontSize="{Binding ScoreFontSize}"
                  Style="{StaticResource ScoreStyle}" RenderTransformOrigin="0.5,0.3">
                  <TextBlock.RenderTransform>
                    <CompositeTransform TranslateY="{Binding ScoreTranslateY}"/>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </Grid>
              <Grid x:Name="PlayerTwoScore" Grid.Column="0" Grid.Row="1">
                <Grid.RenderTransform>
                  <TranslateTransform/>
                </Grid.RenderTransform>
                <Border Style="{StaticResource BorderStyle}"/>
                <TextBlock x:Name="PlayerTwoScoreTextBlock" 
                  Text="{Binding Score.PlayerTwo}" FontSize="{Binding ScoreFontSize}"
                  Style="{StaticResource ScoreStyle}" RenderTransformOrigin="0.5,0.3">
                  <TextBlock.RenderTransform>
                    <CompositeTransform TranslateY="{Binding ScoreTranslateY}"/>
                  </TextBlock.RenderTransform>
                </TextBlock>
              </Grid>
              <Grid x:Name="PlayerOneIconGrid" Grid.Column="1">
                <Grid.RenderTransform>
                  <TranslateTransform/>
                </Grid.RenderTransform>
                <view:BoardSpace x:Name="PlayerOneIcon" IsTabStop="False"
                  SpaceState="{TemplateBinding PlayerOneState}"/>
                <Grid x:Name="PlayerOneGlyphGrid">
                  <TextBlock Text="&#xE13D;" FontFamily="Segoe UI Symbol" FontSize="23"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding IsPlayerOneAi, 
                      Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Reverse}"/>
                  <TextBlock Text="&#xE155;" FontFamily="Segoe UI Symbol" FontSize="23"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding IsPlayerOneAi, 
                      Converter={StaticResource BooleanToVisibilityConverter}}"/>
                  <TextBlock Text="{Binding PlayerOneAiSearchDepth}" FontSize="15"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding IsPlayerOneAi, 
                      Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
                <Path x:Name="PlayerOneWinnerIcon" Fill="Yellow" Opacity="0">
                  <Path.Data>
                    <GeometryGroup FillRule="EvenOdd">
                      <EllipseGeometry RadiusX="27" RadiusY="27" Center="40,40"/>
                      <EllipseGeometry RadiusX="20" RadiusY="20" Center="40,40"/>
                    </GeometryGroup>
                  </Path.Data>
                </Path>
              </Grid>
              <Grid x:Name="PlayerTwoIconGrid" Grid.Column="1" Grid.Row="1">
                <Grid.RenderTransform>
                  <TranslateTransform/>
                </Grid.RenderTransform>
                <view:BoardSpace x:Name="PlayerTwoIcon" IsTabStop="False"
                  SpaceState="{TemplateBinding PlayerTwoState}"/>
                <Grid x:Name="PlayerTwoGlyphGrid">
                  <TextBlock Text="&#xE13D;" FontFamily="Segoe UI Symbol" FontSize="23"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding IsPlayerTwoAi, 
                      Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Reverse}"/>
                  <TextBlock Text="&#xE155;" FontFamily="Segoe UI Symbol" FontSize="23"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding IsPlayerTwoAi, 
                      Converter={StaticResource BooleanToVisibilityConverter}}"/>
                  <TextBlock Text="{Binding PlayerTwoAiSearchDepth}" FontSize="15"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding IsPlayerTwoAi, 
                      Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
                <Path x:Name="PlayerTwoWinnerIcon" Fill="Yellow" Opacity="0">
                  <Path.Data>
                    <GeometryGroup FillRule="EvenOdd">
                      <EllipseGeometry RadiusX="27" RadiusY="27" Center="40,40"/>
                      <EllipseGeometry RadiusX="20" RadiusY="20" Center="40,40"/>
                    </GeometryGroup>
                  </Path.Data>
                </Path>
              </Grid>
            </Grid>                
          </Viewbox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
